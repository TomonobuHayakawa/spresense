#
# For a description of the syntax of this configuration file,
# see the file kconfig-language.txt in the NuttX tools repository.
#
#

menu "Audio Lite"

config AUDIO_LITE
	bool "Simple audio framework"
	default n
	---help---
		This is a simpler audio framework. Provides several audio component,
		such as audio input, audio output, mp3decorder, which can connect to
		each others and configure user original audio signal flow easier.

if AUDIO_LITE

menu "Debug feature"

config AL_DEBUG_ERR
	bool "Enable ERROR debug message"
	default n

config AL_DEBUG_WRN
	bool "Enable WARNNING debug message"
	default n

config AL_DEBUG_DBG
	bool "Enable DEBUG debug message"
	default n

config AL_DEBUG_INF
	bool "Enable INFO debug message"
	default n

endmenu # Debug feature

menu "Event Handler Thread"

config AL_EVTHDLR_PRIORITY
	int "Audio Lite Event Handler thread priority"
	default 105
	---help---
		Thread priority of Audio Lite event handler.

config AL_EVTHDLR_STACKSIZE
	int "Audio Lite Event Handler thread stack size"
	default 2048
	---help---
		Thread stack size of Audio Lite event handler.
		This value should adjust depending on how much stack
		is used in user function.

endmenu # Event Handler Thread

menu "Driver Settings"

config ALDRV_OUTDEVNAME
	string "Output Audio Device file path"
	default "/dev/audio/pcm1"
	---help---
		Audio output device file path of target audio device.

config ALDRV_INDEVNAME
	string "Output Audio Device file path"
	default "/dev/audio/pcm_in1"
	---help---
		Audio input device file path of target audio device.

config ALDRV_MSGQNAME
	string "Audio Lite Driver Message queue name"
	default "/tmp/aldrv_mq"
	---help---
		Message queue name (file path) to communicate with audio message loop.

config ALDRV_MQDEPTH
	int "Audio Lite Driver Message queue depth"
	default 4
	---help---
		Message queue depth.

config ALDRV_TRIGER_ENQCOUNT
	int "Audio Lite Driver threshold of enqueue count to start dma"
	default 3
	---help---
		Threshold of enqueue count. Driver DMA is not started until
		apbuffer is enqueued over this value.

config ALDRV_PRIO
	int "Audio Lite Driver thread priority"
	default 105
	---help---
		Thread priority of Audio Lite driver.

config ALDRV_STACKSZ
	int "Audio Lite Driver thread Stcack size"
	default 768
	---help---
		Thread stack size of Audio Lite driver.

endmenu # Driver settings

menu "Input Device Thread"

config ALINPUTCOMP_PRIO
	int "Audio Lite Input thread priority"
	default 105
	---help---
		Thread priority of Audio Lite Input component.

config ALINPUTCOMP_STACKSZ
	int "Audio Lite Input thread Stcack size"
	default 2048
	---help---
		Thread stack size of Audio Lite Input component.

endmenu # Input Device Thread

menu "Output Device Thread"

config ALOUTCOMP_PRIO
	int "Audio Lite Output thread priority"
	default 105
	---help---
		Thread priority of Audio Lite Output component.

config ALOUTCOMP_STACKSZ
	int "Audio Lite Output thread Stcack size"
	default 1024
	---help---
		Thread stack size of Audio Lite Output component.

endmenu # Output Device Thread

menu "Worker Supervisor Thread"

config AUDIOLITE_WSVR_DEFPRIO
	int "Audio Lite ASMP Supervisor thread default priority"
	default 105
	---help---
		Default thread priority of Audio Lite ASMP worker.

config AUDIOLITE_WSVR_DEFSTACK
	int "Audio Lite ASMP Supervisor thread default stack size"
	default 2048
	---help---
		Default thread stack size of Audio Lite ASMP worker.

endmenu # Worker Supervisor Thread

menu "MP3 Decorder Component"

config ALMP3DEC_INJECTPRIO
	int "Audio Lite MP3DEC component stream loader thread priority"
	default 105
	---help---
		Thread priority of Audio Lite MP3DEC component for stream loader.

config ALMP3DEC_INJECTSTACK
	int "Audio Lite MP3DEC component stream loader thread Stcack size"
	default 768
	---help---
		Thread stack size of Audio Lite MP3DEC component for stream loader.

config MP3DECSVR_PRIO
	int "Audio Lite MP3DEC component event handler thread priority"
	default 105
	---help---
		Thread priority of Audio Lite MP3DEC component for event handling.

config MP3DECSVR_STACKSZ
	int "Audio Lite MP3DEC component event handler thread Stcack size"
	default 768
	---help---
		Thread stack size of Audio Lite MP3DEC component for event handler.

config AUDIO_LITE_MP3DEC
	bool "MP3 Decoder component"
	default y
	---help---
		Enable MP3 decoder component which can decode MP3 frames to PCM data.
		The decorder core uses minimp3 with customized for Spresense.
		minimp3 is provided under Creative Common 0 License.
		Please see https://github.com/lieff/minimp3 for detais.

if AUDIO_LITE_MP3DEC

choice
	prompt "MP3 Subcore binary selection"
	default AUDIO_LITE_MP3DEC_SUBCORE_SPK
	---help---
		There are 2 options to provide for MP3 sub-core binary.
		One is a "spk" binary which is contained in firmware.bin. If choose
		this, user don't need to install other binaries as MP3 decorder,
		except your own nuttx.spk.
		The other is an "ELF" file, which is built as sub-core elf in build
		stage. If choose this, user can modify MP3 decoder by yoreself.
		But in the mean time, user needs to install the elf file in to flash
		memory.

config AUDIO_LITE_MP3DEC_SUBCORE_SPK
	bool "mp3dec.spk"

config AUDIO_LITE_MP3DEC_SUBCORE_ELF
	bool "mp3dec (ELF file)"

endchoice

if AUDIO_LITE_MP3DEC_SUBCORE_ELF

config AIDO_LITE_MP3DEC_SUBCORE_ELFNAME
	string "mp3dec ELF file path"
	default "/mnt/spif/mp3dec"
	---help---
		ELF file path on Spresense. To set mp3dec ELF file path to install, when
		you choose "mp3dec (ELF file)".
		If you want to install it in SPI-Flash on spresense main board, set "/mnt/spif/mp3dec".
		If you want to install it in top directory of SDCard on an extention board,
		set "/mnt/sd0/mp3dec".
		To enable this option, needs to enable EXTERNALS_CMSIS, ASMP and ASMP_WORKER_LIBC

endif # end of if AUDIO_LITE_MP3DEC

endif # AUDIO_LITE_MP3DEC_SUBCORE_ELF

endmenu # MP3 Decorder Component

endif # end of if AUDIO_LITE

endmenu
