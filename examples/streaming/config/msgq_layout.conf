##############################################################################
# apps/examples/streaming/config/msgq_layout.conf
#
#   Copyright (C) 2017 Sony Corporation. All rights reserved.
#   Author: Mitsuo Hiragane<Mitsuo.Hiragane@sony.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor Sony nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
##############################################################################

# ユーザー定義定数は、"U_"で始まる英大文字・数字の名称とすること
# "U_MSGQ_"で始まる名称で定義すると、msgq_id.hにdefineマクロとしても出力される
U_HEADER_SIZE	= 8	# Message packet header size

# for MSGQ_AUD_DECODE
U_ADEC_SIZE	= 16 + U_HEADER_SIZE
U_ADEC_NUM	= 64

# for MSGQ_AUD_RENDER
U_AREN_SIZE	= 8 + U_HEADER_SIZE
U_AREN_NUM	= 64

###############################################################################
# メッセージキュープールの定義
#
#   ID:         メッセージキュープールIDの名称を、"MSGQ_"で始まる文字列で指定。
#               以下は、予約済みのため使用禁止。
#               "MSGQ_NULL", "MSGQ_TOP", "MSGQ_END"
#
#   n_size:     通常優先度キューの各要素のバイト数(8以上512以下)。
#               固定ヘッダ長(8byte) + パラメタ長を4の倍数で指定する。
#               共有キューの場合はツール内で、64の倍数の値に切り上げられる。
#
#   n_num:      通常優先度キューの要素数(1以上16384以下)。
#
#   h_size:     高優先度キューの各要素のバイト数(0または、8以上512以下)。
#               未使用時は0を指定すること。
#               固定ヘッダ長(8byte) + パラメタ長を4の倍数で指定する。
#               共有キューの場合はツール内で、64の倍数の値に切り上げられる。
#
#   h_num:      高優先度キューの要素数(0または、1以上16384以下)。
#               未使用時は0を指定すること。
#
#   owner:      キューの所有者。spl_layout.confで定義したCPU-IDのいずれかを指定する。
#               キューの所有者のみが、メッセージを受信できる。
#
#   spinlock:   非共有キューは空文字列を指定する。
#               共有キューは、spl_layout.confで定義したスピンロックIDのいずれかを指定する。
#               共有キューは、送受信ともにオーバーヘッドが大きいため、大量のメッセージの
#               やりとりは避けること。
#
MsgQuePool = [
# [ ID,                                             n_size  n_num  h_size  h_num
  # For Audio
  ["MSGQ_AUD_MGR",                                     88,    3,     0,      0],
  ["MSGQ_AUD_APP",                                     40,    2,     0,      0],
  ["MSGQ_AUD_DSP",                                     20,    5,     0,      0],
  ["MSGQ_AUD_PLY",                                     48,    5,     0,      0],
  ["MSGQ_AUD_SUB_PLY",                                 48,    5,     0,      0],
  ["MSGQ_AUD_OUTPUT_MIX",                              48,    8,     0,      0],
  ["MSGQ_AUD_RND_PLY",                                 32,   16,     0,      0],
  ["MSGQ_AUD_RND_PLY_SYNC",                            16,    8,     0,      0],
  ["MSGQ_AUD_RND_SUB",                                 32,   16,     0,      0],
  ["MSGQ_AUD_RND_SUB_SYNC",                            16,    8,     0,      0],
  nil # end of user definition
] # end of MsgQuePool

###############################################################################
# デバッグ用に、メッセージpop後の領域を埋める値を8bitで指定する
# 0の時は領域埋めを行わない。デバッグ時以外は、0を指定すること
# 0以外を指定する場合、以下のファイルの
#    apps/memutils/message/include/MsgQue.h
# の以下の記述の値も変更すること
#   #define MSG_FILL_VALUE_AFTER_POP	0x0
#
MsgFillValueAfterPop = 0x00

###############################################################################
# メッセージパラメタの型が送受信で一致するかのチェックの有無
# CPU内メッセージのみが対象となる
# trueを指定すると要素サイズが8より大きいキューの各要素に4バイトの領域が追加され
# 処理時間も増加する。ISS環境以外では、通常はfalseを指定すること
# false以外を指定する場合、以下のファイルの
#    apps/memutils/message/include/MsgPacket.h
# の以下の記述の値も変更すること
#   #define MSG_PARAM_TYPE_MATCH_CHECK	false
#
MsgParamTypeMatchCheck = false

require "msgq_layout.rb"
