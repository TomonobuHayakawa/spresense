--- lib.c	2016-10-02 06:46:01.000000000 +0900
+++ lib.c	2021-04-21 13:16:31.811943342 +0900
@@ -44,7 +44,9 @@
 #ifndef HAVE_SETPROC_TITLE
 /* Functions to manipulate with program title */
 
+#ifndef VTUN_NUTTX
 extern char **environ;
+#endif
 static char	*title_start;	/* start of the proc title space */
 static char	*title_end;     /* end of the proc title space */
 static int	title_size;
@@ -60,11 +62,13 @@
 
 	for (i = 0; envp[i]; i++);
 
+#ifndef VTUN_NUTTX
 	environ = (char **) malloc(sizeof (char *) * (i + 1));
 
 	for(i = 0; envp[i]; i++)
 	   environ[i] = strdup(envp[i]);
 	environ[i] = NULL;
+#endif
 
 	/*
 	 *  Save start and extent of argv for set_title.
@@ -144,6 +148,7 @@
 	return read_n(fd, buf, count);
 }
 
+#ifdef HAVE_WORKING_FORK
 /* 
  * Substitutes opt in place off '%X'. 
  * Returns new string.
@@ -220,7 +225,9 @@
     nstr[np] = '\0';
     return nstr;
 }
+#endif
 
+#ifdef HAVE_WORKING_FORK
 /* 
  * Split arguments string.
  * ' ' - group arguments
@@ -278,6 +285,7 @@
 
      argv[i]=NULL;
 }
+#endif
  
 #ifdef HAVE_WORKING_FORK
 int run_cmd(void *d, void *opt)
@@ -359,8 +367,12 @@
     
       va_start(ap, format);
       vsnprintf(buf, sizeof(buf)-1, format, ap);
+#ifdef VTUN_NUTTX
+      syslog(priority, "%s\n", buf);
+#else
       syslog(priority, "%s", buf);
       closelog();
+#endif
       va_end(ap);
 
       in_syslog = 0;
